version: "3.8"

services:
  db:
    image: "postgres:13.3"
    container_name: "dwh"
    restart: always
    environment:
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_DB: "${POSTGRES_DB}"
    ports:
      - "5432:5432"
  zookeeper:
    build:
      context: .
      dockerfile: ./kafka_docker/zookeeper/Dockerfile.zookeeper
    container_name: "zookeeper"
    ports:
      - "2181:2181"
    depends_on:
      - db
  broker:
    build:
      context: .
      dockerfile: ./kafka_docker/broker/Dockerfile.kafka
    container_name: "broker"
    ports:
      - "9092:9092"
    depends_on: 
      - zookeeper
  brokerMonitor:
    container_name: "broker-monitor"
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "broker:9092"
    depends_on:
      - broker
  twitter-stream:
    container_name: "api_stream"
    restart: on-failure
    build:
      context: .
      dockerfile: ./kafka_docker/Dockerfile.stream
    depends_on:
      - zookeeper
      - broker
      - stream-db
  consumer:
    container_name: "api_consumer"
    build:
      context: .
      dockerfile: ./kafka_docker/Dockerfile.consumer
    depends_on:
      - twitter-stream
  stream-connector:
    build:
      context: .
      dockerfile: ./kafka_docker/connector/Dockerfile.connector_mongodb
    depends_on:
      - broker
      - twitter-stream
      - stream-db
  stream-db:
    image: mongo:4.4.6
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${POSTGRES_USER}"
      MONGO_INITDB_ROOT_PASSWORD: "${POSTGRES_PASSWORD}"
      MONGO_INTIDB_DATABASE: "${POSTGRES_DB}"
    depends_on:
      - broker
  mongo-express:
      image: mongo-express
      restart: always
      ports:
        - 8081:8081
      environment:
        ME_CONFIG_MONGODB_ADMINUSERNAME: "${POSTGRES_USER}"
        ME_CONFIG_MONGODB_ADMINPASSWORD: "${POSTGRES_PASSWORD}" 
        ME_CONFIG_MONGODB_SERVER: "stream-db"
      depends_on:
        - stream-db
